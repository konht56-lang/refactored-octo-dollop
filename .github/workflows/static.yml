# Simp<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>📺 مكتبة الفيديوهات</title>
  <style>
    body {
      font-family: "Cairo", sans-serif;
      background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
      margin: 0;
      padding: 0;
      color: #fff;
      text-align: center;
    }

    header {
      padding: 20px;
      font-size: 22px;
      font-weight: bold;
      background: rgba(0,0,0,0.3);
    }

    .input-area {
      margin: 20px;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
    }

    input {
      flex: 1;
      min-width: 180px;
      padding: 10px;
      border: none;
      border-radius: 10px;
      font-size: 14px;
    }

    button {
      padding: 10px 18px;
      border: none;
      border-radius: 10px;
      background: #ff6f61;
      color: white;
      font-weight: bold;
      cursor: pointer;
      transition: 0.3s;
    }

    button:hover {
      background: #ff3b2e;
    }

    #videos {
      display: grid;
      grid-template-columns: 1fr;
      gap: 15px;
      padding: 20px;
    }

    .video-card {
      background: rgba(255, 255, 255, 0.1);
      border-radius: 15px;
      padding: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.5);
      animation: fadeIn 0.6s ease-in-out;
    }

    iframe, video {
      width: 100%;
      height: 220px;
      border-radius: 12px;
      display: block;
    }

    .download-btn {
      display: inline-block;
      margin-top: 10px;
      padding: 8px 14px;
      background: #1db954;
      border-radius: 8px;
      color: white;
      text-decoration: none;
      font-size: 14px;
      font-weight: bold;
      transition: 0.3s;
    }

    .download-btn:hover {
      background: #14833b;
    }

    @keyframes fadeIn {
      from {opacity: 0; transform: translateY(10px);}
      to {opacity: 1; transform: translateY(0);}
    }
  </style>
</head>
<body>
  <header>📺 مكتبة الفيديوهات</header>

  <!-- إدخال الروابط -->
  <div class="input-area">
    <input type="text" id="videoUrl" placeholder="أدخل رابط الفيديو (YouTube أو mp4)">
    <input type="text" id="videoTitle" placeholder="أدخل عنوان الفيديو (اختياري)">
    <button onclick="addVideo()">➕ أضف</button>
  </div>

  <!-- شريط البحث -->
  <div class="input-area">
    <input type="text" id="searchBox" placeholder="🔍 ابحث عن فيديو" onkeyup="searchVideos()">
  </div>

  <!-- منطقة الفيديوهات -->
  <div id="videos"></div>

  <script>
    function addVideo() {
      const url = document.getElementById("videoUrl").value.trim();
      const title = document.getElementById("videoTitle").value.trim() || "فيديو جديد";
      if (!url) return;

      let embedCode = "";
      let downloadBtn = "";
      let videoId = "";

      if (url.includes("youtube.com") || url.includes("youtu.be")) {
        if (url.includes("v=")) {
          videoId = url.split("v=")[1].split("&")[0];
        } else if (url.includes("youtu.be/")) {
          videoId = url.split("youtu.be/")[1];
        }

        embedCode = `<iframe src="https://www.youtube.com/embed/${videoId}" frameborder="0" allowfullscreen></iframe>`;
        downloadBtn = `<a href="https://www.y2mate.com/youtube/${videoId}" target="_blank" class="download-btn">⬇️ تحميل</a>`;
      } else if (url.endsWith(".mp4")) {
        embedCode = `<video src="${url}" controls></video>`;
        downloadBtn = `<a href="${url}" download class="download-btn">⬇️ تحميل</a>`;
      } else {
        alert("⚠️ الرابط غير مدعوم. أدخل YouTube أو mp4 فقط.");
        return;
      }

      const videoDiv = document.createElement("div");
      videoDiv.classList.add("video-card");
      videoDiv.innerHTML = `<h3>${title}</h3>` + embedCode + downloadBtn;
      document.getElementById("videos").appendChild(videoDiv);

      // تنظيف الحقول
      document.getElementById("videoUrl").value = "";
      document.getElementById("videoTitle").value = "";
    }

    // البحث عن الفيديوهات
    function searchVideos() {
      const term = document.getElementById("searchBox").value.toLowerCase();
      const videos = document.getElementById("videos").children;
      for (let v of videos) {
        const text = v.innerText.toLowerCase();
        v.style.display = text.includes(term) ? "block" : "none";
      }
    }
  </script>
  <style>
    body {
      margin: 0;
      padding-bottom: 50px; /* مساحة لعدم تغطية المحتوى بالحقوق */
      font-family: Arial, sans-serif;
    }
    footer {
      position: fixed;
      bottom: 0;
      width: 100%;
      background-color: #7EE688;
      text-align: center;
      padding: 10px;
      font-size: 14px;
      color: #555;
      border-top: 1px solid #FFFFFF;
    }
  </style>
</head>
<body>

  <h1> يو  مرحباً بك في موقعي</h1>
  <style>
    footer {
      position: fixed;
      bottom: 0;
      width: 100%;
      background: linear-gradient(to left, #1a1a1a, #333);
      text-align: center;
      padding: 15px 10px;
      font-size: 16px;
      color: #f0f0f0;
      font-family: 'Cairo', sans-serif;
      box-shadow: 0 -2px 8px rgba(0,0,0,0.6);
    }

    .shine {
      color: #FFD700;
      font-weight: bold;
      animation: glow 2s ease-in-out infinite;
    }

    @keyframes glow {
      0%, 100% {
        text-shadow: 0 0 5px #A6EA7C, 0 0 10px #7EFF6E;
      }
      50% {
        text-shadow: 0 0 15px #38B107, 0 0 25px #07FF00;
      }
    }
  </style>
  <link href="https://fonts.googleapis.com/css2?family=Cairo&display=swap" rel="stylesheet">
</head>
<body>

  <footer>
    تم بواسطة <span class="shine">شنشن</span> &copy; 2025
  </footer>
</body>
</html>le workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
